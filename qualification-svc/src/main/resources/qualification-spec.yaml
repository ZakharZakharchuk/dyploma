openapi: 3.0.0
info:
  title: Qualification Service API
  version: 1.0.0
tags:
  - name: Qualification
    description: Qualification and past projects

paths:
  /qualification/{personId}:
    get:
      summary: Get full qualification profile by personId
      parameters:
        - in: path
          name: personId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Qualification profile found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QualificationProfile'
        '400':
          description: Invalid personId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
        '404':
          description: Person not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'

  /qualification/skill:
    post:
      summary: Add a skill to a person
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SkillRequest'
      responses:
        '200':
          description: Skill added
        '400':
          description: Invalid skill data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'

  /qualification/skill/{skillId}:
    delete:
      summary: Delete a skill by skillId
      parameters:
        - in: path
          name: skillId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Skill deleted
        '400':
          description: Invalid skillId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
        '404':
          description: Skill not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'

  /qualification/project:
    post:
      summary: Add a project to a person
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
      responses:
        '200':
          description: Project added
        '400':
          description: Invalid project data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'

    put:
      summary: Update an existing project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
      responses:
        '200':
          description: Project updated
        '400':
          description: Invalid project data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
        '404':
          description: Project not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'

  /qualification/project/{projectId}:
    delete:
      summary: Delete a project by projectId
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Project deleted
        '400':
          description: Invalid projectId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
        '404':
          description: Project not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseErrorResponse'

components:
  schemas:
    QualificationProfile:
      type: object
      properties:
        personId:
          type: string
        skills:
          type: array
          items:
            $ref: '#/components/schemas/Skill'
        projects:
          type: array
          items:
            $ref: '#/components/schemas/ProjectInfo'

    Skill:
      type: object
      properties:
        id:
          type: string
        name:
          type: string

    ProjectInfo:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        description:
          type: string

    SkillRequest:
      type: object
      properties:
        personId:
          type: string
        name:
          type: string

    ProjectRequest:
      type: object
      properties:
        id:
          type: string
        personId:
          type: string
        name:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        description:
          type: string

    BaseErrorResponse:
      title: BaseErrorResponse
      required:
        - type
        - title
        - instance
      type: object
      properties:
        type:
          type: string
          description: Type of the error
        title:
          type: string
          description: Title of the error
        instance:
          type: string
          description: URI or request path where the error occurred
        details:
          type: string
          description: Detailed error message
